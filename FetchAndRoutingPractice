                                                                           BlogItem

// Write your JS code here
import {Link} from 'react-router-dom'
import './index.css'

const BlogItem = props => {
    const {blogItemDetails} = props 
    const {id, imageUrl, topic, title, avatarUrl, author} = blogItemDetails
    
    return (
        <li className="blog-item">
            <Link to={`/blogs/${id}`} className="blog-link"> 
                <div className="blog-container">
                    <img className="blog-image" src={imageUrl} alt={`item${id}`} />
                    <div className="blog-information">
                        <p className="blog-topic">{topic}</p> 
                        <h1 className="blog-title">{title}</h1>
                        <div className="author-information">
                            <img className="avatar" src={avatarUrl} alt={`avatar${id}`} />
                            <p className="author-name">{author}</p>
                        </div>
                    </div>
                </div>
            </Link>
        </li>
    )
}

export default BlogItem

                                                                            BlogItemDetails

// Write your JS code here
import {Component} from 'react'
import Loader from 'react-loader-spinner'
import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'
import './index.css'

class BlogItemDetails extends Component {
    state={blogData: {}, isLoading: true}

    componentDidMount() {
        this.getBlogItemData()
    }

    getBlogItemData = async () => {
        const {match} = this.props
        const {params} = match
        const {id} = params
        const response = await fetch(`https://apis.ccbp.in/blogs/${id}`)
        const data = await response.json()
        const updatedData = {
            title: data.title,
            imageUrl: data.image_url,
            content: data.content,
            avatarUrl: data.avatar_url,
            author: data.author,
        }
        this.setState({blogData: updatedData, isLoading: false})
    }

    renderBlogItemDetails = () => {
        const {blogData} = this.state
        const {title, imageUrl, content, avatarUrl, author} = blogData

        return (
            <div className="blog-info">
                <h1 className="blog-title">{title}</h1>
                <div className="author-details">
                    <img className="author-pic" src={avatarUrl} alt= {author} />
                    <p className="author-name">{author}</p>
                </div>
                <img className="blog-image" src={imageUrl} alt={title} />
                <p className="blog-content">{content}</p>
            </div>
        )
    }
    
    render() {
        const {isLoading} = this.state

        return (
            <div className="container">
                {isLoading ? (
                    <div data-testid="loader">
                        <Loader type="TailSpin" color="#00bfff" height={50} width={50} />
                    </div>
            ) : (
                this.renderBlogItemDetails()
            )}
            </div>
        )
    }
}

export default BlogItemDetails

                                                                               Blog List
// Write your JS code here
import {Component} from 'react'

import Loader from 'react-loader-spinner'
import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'
import BlogItem from '../BlogItem'
import './index.css'

class BlogList extends Component {
    state={isLoading: true, blogData: []}

    componentDidMount() {
        this.getBlogItemData()
    }

    getBlogsData = async () => {
        const response = await fetch('https://apis.ccbp.in/blogs')
        const data = await response.json()
        const formattedData = data.map(eachItem => ({
            id: eachItem.id,
            title: eachItem.title,
            imageUrl: eachItem.image_url,
            avatarUrl: eachItem.avatar_url,
            author: eachItem.author,
            topic: eachItem.topic,
        }))
        this.setState({blogsData: formattedData, isLoading: false})
    }

    render() {
        const {blogsData, isLoading} = this.state

        return (
            <div className="blogs-container">
                {isLoading ? (
                    <div data-testid="loader">
                        <Loader type="TailSpin" color="#00bff" height={50} width={50} />
                    </div>
            ) : (
                <ul className="blogs-list">
                    {blogsData.map(eachBlogItem => (
                        <BlogItem key={eachBlogItem.id} blogItemDetails={eachBlogItem} />
                ))}
                </ul>
            )}
            </div>
        )
    }
}

export default BlogList

                                                                            Home

import './index.css'
import BlogList from '../BlogList'
import UserInfo from '../UserInfo'

const Home = () => (
  <div className="home-container">
    <UserInfo /> 
    <BlogList />
  </div>
)

export default Home

                                                                                 App.js

import {Route, Switch} from 'react-router-dom'

import Header from './components/Header'
import About from './components/About'
import Home from './components/Home'
import Contact from './components/Contact'
import BlogItemDetails from './components/BlogItemDetails'
import NotFound from './components/NotFound'

import './App.css'

const App = () => (
  <div className="app-container">
    <div className="responsive-container">
      <Header />
      <div className="app-body">
        <Switch>
          <Route exact path="/" component={Home} />
          <Route exact path="/about" component={About} />
          <Route exact path="/contact" component={Contact} />
          <Route exact path="/blogs/:id" component={BlogItemDetails} />
          <Route component={NotFound} />
        </Switch>
      </div>
    </div>
  </div>
)

export default App
